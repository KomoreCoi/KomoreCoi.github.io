<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星河清梦</title>
  
  
  <link href="https://komorecoi.github.io/atom.xml" rel="self"/>
  
  <link href="https://komorecoi.github.io/"/>
  <updated>2025-03-10T15:39:09.491Z</updated>
  <id>https://komorecoi.github.io/</id>
  
  <author>
    <name>布响丸辣</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>原码、反码和补码</title>
    <link href="https://komorecoi.github.io/2025/03/06/%E5%8E%9F%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81%E5%92%8C%E8%A1%A5%E7%A0%81/"/>
    <id>https://komorecoi.github.io/2025/03/06/%E5%8E%9F%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81%E5%92%8C%E8%A1%A5%E7%A0%81/</id>
    <published>2025-03-05T18:03:22.000Z</published>
    <updated>2025-03-10T15:39:09.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="机器数和机器数的真值"><a href="#机器数和机器数的真值" class="headerlink" title="机器数和机器数的真值"></a>机器数和机器数的真值</h2><ol><li><p>机器数</p><p>一个数在计算机中的二进制表示形式，叫做这个数的机器数。机器数是带符号的，在计算机用机器数的<strong>最高位</strong>存放符号，正数为0，负数为1。机器数包含原码、反码和补码三种表示形式。</p><p>比如，十进制中的数 +3 ，用一个字节八位表示，转换成二进制就是0000 0011。如果是 -3 ，就是 1000 0011 。</p><p>那么，这里的 0000 0011 和 1000 0011 就是机器数。</p></li><li><p>机器数的真值</p><p>因为第一位是符号位，所以机器数的形式值就不等于真正的数值。</p><p>例如上面的有符号数 1000 0011，其最高位1代表负，其真正数值是 -3，而不是形式值131（1000 0011转换成十进制等于131）。所以，为区别起见，<strong>将带符号位的机器数对应的真正数值</strong>称为<strong>机器数的真值</strong>。</p><p>例：0000 0001的真值 &#x3D; +000 0001 &#x3D; +1，1000 0001的真值 &#x3D; –000 0001 &#x3D; –1</p></li></ol><h2 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a>原码、反码、补码</h2><ol><li><p>正数的原码与反码、补码一样，称为<strong>三码合一</strong>。</p></li><li><p>负数：</p><ul><li>负数的<strong>原码</strong>：把十进制转为二进制，然后最高位设置为1</li><li>负数的<strong>反码</strong>：在原码的基础上，最高位不变，其余位取反（0变1,1变0）</li><li>负数的<strong>补码</strong>：反码+1</li></ul></li><li><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">int</span><br><span class="line">正数：25   00000000 00000000 000000000 00011001（原码）</span><br><span class="line">正数：25   00000000 00000000 000000000 00011001（反码）</span><br><span class="line">正数：25   00000000 00000000 000000000 00011001（补码）</span><br><span class="line"></span><br><span class="line">负数：-25  10000000 00000000 000000000 00011001（原码）</span><br><span class="line">负数：-25  11111111 11111111 111111111 11100110（反码）</span><br><span class="line">负数：-25  11111111 11111111 111111111 11100111（补码）</span><br></pre></td></tr></table></figure></li><li><p>计算机使用补码进行计算，计算时符号位也参与计算。</p><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">byte</span><br><span class="line">+1 = 0000 0001 (原码) = 0000 0001 (反码) = 0000 0001 (补码)</span><br><span class="line">-1 = 1000 0001 (原码) = 1111 1110 (反码) = 1111 1111 +  (补码)</span><br><span class="line">1 - 1 = 1 + (-1) = 1 0000 0000 = 0000 0000 (byte只有8位，舍弃掉最高位)</span><br><span class="line"></span><br><span class="line">-127 = 1111 1111 (原码) = 1000 0000 (反码) = 1000 0001 (补码)</span><br><span class="line">-1 + (-127) = 1111 1111 + 1000 0001 = 1 1000 0000 = 1000 0000</span><br></pre></td></tr></table></figure><p>-1-127的结果是-128，在用补码运算的结果中，1000 0000就是-128。</p><p>但是注意因为实际上是使用以前的-0的补码来表示-128，所以-128并没有原码和反码表示。(对-128的补码表示[1000 0000]补，算出来的原码是[0000 0000]原，这是不正确的)</p></li><li><p>补码解决“负零”问题</p><ul><li><p>正零</p><ul><li><p>原码 0000 0000</p></li><li><p>反码 0000 0000</p></li><li><p>补码 0000 0000</p></li></ul></li><li><p>负零</p><ul><li><p>原码 1000 0000</p></li><li><p>反码 1111 1111</p></li><li><p>补码 0000 0000</p></li></ul></li></ul></li><li><p>byte的取值范围</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-128 ~ 127 </span><br><span class="line">0000 0001 ~ 0111 1111 ==&gt; 0000 0001 ~ 0111 1111 ==&gt; 1 ~ 127</span><br><span class="line"></span><br><span class="line">1000 0001 ~ 1111 1111 ==&gt; 1111 1111 ~ 1000 0001 ==&gt; -127 ~ -1</span><br><span class="line"></span><br><span class="line">0000 0000 ==&gt; 0</span><br><span class="line"></span><br><span class="line">1000 0000 ==&gt; -128（特殊规定）= -127-1</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;机器数和机器数的真值&quot;&gt;&lt;a href=&quot;#机器数和机器数的真值&quot; class=&quot;headerlink&quot; title=&quot;机器数和机器数的真值&quot;&gt;&lt;/a&gt;机器数和机器数的真值&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;机器数&lt;/p&gt;
&lt;p&gt;一个数在计算机中的二进制表示形式，叫</summary>
      
    
    
    
    <category term="进制" scheme="https://komorecoi.github.io/categories/%E8%BF%9B%E5%88%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>摩尔斯电码</title>
    <link href="https://komorecoi.github.io/2025/03/06/%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81/"/>
    <id>https://komorecoi.github.io/2025/03/06/%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81/</id>
    <published>2025-03-05T17:45:06.000Z</published>
    <updated>2025-03-05T17:53:15.506Z</updated>
    
    <content type="html"><![CDATA[<p>摩尔斯电码（Morse code）也被称作摩斯密码，是一种时通时断的信号代码，通过不同的排列顺序来表达不同的<a href="https://baike.baidu.com/item/%E8%8B%B1%E6%96%87%E5%AD%97%E6%AF%8D/6779426?fromModule=lemma_inlink">英文字母</a>、数字和标点符号。它由两种基本信号组成：短促的点信号“<code>·</code>”，读“<code>滴</code>”；保持一定时间的长信号“<code>—</code>”，读“<code>嗒</code>”。然后，组成了26个字母，从而拼写出相应的单词。</p><img src="https://raw.githubusercontent.com/KomoreCoi/imgs/main/imgs/202503060147542.png" alt="image-20220520105721126" style="zoom:67%;" /><p>记忆技巧：</p><img src="https://raw.githubusercontent.com/KomoreCoi/imgs/main/imgs/202503060147539.jpg" alt="morsecode" style="zoom:50%;" /><p>我们偶尔会看到的：SOS，即为：</p><p><img src="https://raw.githubusercontent.com/KomoreCoi/imgs/main/imgs/202503060148195.png" alt="image-20220520110206899"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;摩尔斯电码（Morse code）也被称作摩斯密码，是一种时通时断的信号代码，通过不同的排列顺序来表达不同的&lt;a href=&quot;https://baike.baidu.com/item/%E8%8B%B1%E6%96%87%E5%AD%97%E6%AF%8D/6779426?</summary>
      
    
    
    
    <category term="进制" scheme="https://komorecoi.github.io/categories/%E8%BF%9B%E5%88%B6/"/>
    
    
    <category term="摩斯电码" scheme="https://komorecoi.github.io/tags/%E6%91%A9%E6%96%AF%E7%94%B5%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>hexo测试</title>
    <link href="https://komorecoi.github.io/2024/07/29/hexo%E6%B5%8B%E8%AF%95/"/>
    <id>https://komorecoi.github.io/2024/07/29/hexo%E6%B5%8B%E8%AF%95/</id>
    <published>2024-07-29T11:14:36.000Z</published>
    <updated>2025-03-09T12:34:20.181Z</updated>
    
    <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: hexo测试</span><br><span class="line">categories: [cat1,cat2]</span><br><span class="line">tags: [tag1,tag2]</span><br><span class="line">date: 2024-07-29 19:14:36</span><br><span class="line">toc: true</span><br></pre></td></tr></table></figure><p>帖子模板在<code>scaffolds</code>文件夹下</p><p>描述下使用拼音输入光标总是跳到描述中，使用英文没有这个问题。本来以为是typora的bug，原来是输入法的问题，使用搜狗后解决！！！可恨的微软拼音！！！</p><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。 每个布局创建的文件会被保存到不同的路径。 </p><p>不写layout参数，默认是<code>post</code>，新创建的帖子被保存到 <code>source/_posts</code> 文件夹。<code>post</code>是默认的<code>布局</code>，但你也可以提供自己的布局。 您可以通过编辑 <code>_config.yml</code> 中的 <code>default_layout</code> 设置来更改默认布局。</p><p>使用布局 <code>draft</code> 来创建草稿，新创建的草稿被保存到 <code>source/_darfts</code> 文件夹。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 发表草稿</span><br><span class="line">hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>生成静态文件。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-d</code>, <code>--deploy</code></td><td align="left">在生成完成后部署。</td></tr><tr><td align="left"><code>-w</code>, <code>--watch</code></td><td align="left">监视文件变动</td></tr><tr><td align="left"><code>-b</code>, <code>--bail</code></td><td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td align="left"><code>-f</code>, <code>--force</code></td><td align="left">强制重新生成</td></tr><tr><td align="left"><code>-c</code>, <code>--concurrency</code></td><td align="left">要同时生成的文件的最大数量。 默认无限制</td></tr></tbody></table><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>启动服务器。 默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>, <code>--port</code></td><td align="left">重设端口</td></tr><tr><td align="left"><code>-s</code>, <code>--static</code></td><td align="left">只使用静态文件</td></tr><tr><td align="left"><code>-l</code>, <code>--log</code></td><td align="left">启用日志。 Override logger format.</td></tr></tbody></table><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>部署你的网站。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-g</code>, <code>--generate</code></td><td align="left">在部署前生成</td></tr></tbody></table><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 清除+生成+启动</span><br><span class="line">hexo clean &amp; hexo g &amp; hexo s</span><br><span class="line"># 清除+生成+部署</span><br><span class="line">hexo clean &amp; hexo g &amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="pore中文文档"><a href="#pore中文文档" class="headerlink" title="pore中文文档"></a>pore中文文档</h2><p><a href="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md">hexo-theme-pure&#x2F;README.cn.md at master · cofess&#x2F;hexo-theme-pure</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://komorecoi.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
